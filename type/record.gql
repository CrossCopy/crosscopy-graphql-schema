enum RecordType {
    TEXT
    IMAGE
}

type Rec {
    """Primary key of the record in the database, generated by database."""
    id: ID!
    
    """
    Generated on client side, designed for syncing purpose
    It's like the primary key within a user's record
    When records get's generated locally, they may not be uploaded to cloud.
    It's used as the primary key on client side and used to sync (identify missing records) with cloud.
    """
    uuid: ID!

    """link to userId to form relation"""
    userId: String!

    """Actual Content. Plain Text when type is TEXT, Image url when type is IMAGE."""
    value: String!
    
    """Type of the record, TEXT or IMAGE."""
    type: RecordType!

    """Profile this record belongs to"""
    profile: String!

    """Timestamp of the record, generated on client side. Mainly for sortin"""
    createdAt: Date

    """Device where the record is created"""
    device: String!

    """
    binary indicator, whether this record is expired
    expired records may not be removed from database right away
    records retained for a period of time, for features like recovery of plan upgrade
    """
    expired: Boolean!

    """
    binary indicator, whether this record is deleted
    deleted records may not be removed from database right away
    records retained for a period of time, for features like recovery of plan upgrade
    """
    deleted: Boolean!

    deletedAt: Date
}

type AddRecordResponse {
    success: Boolean!
    message: String!
    id: ID! # id of the record in the database
    record: Rec!
}

type DeleteRecordResponse {
    success: Boolean!
    message: String!
}

type UpdateRecordResponse {
    success: Boolean!
    message: String!
    record: Rec!
}

