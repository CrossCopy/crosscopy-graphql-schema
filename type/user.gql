enum Role {
  USER
  ADMIN
}

enum FilterListType {
  BLACKLIST
  WHITELIST
  MIXED
}

type User {
  _id: String!
  username: String!
  email: String!
  createdAt: String
  profiles: [String]
  records: [Record]
  role: Role!
  filterListType: FilterListType!
  blacklist: [String]!
  whitelist: [String]!
  recordCount: Int!
  lastRecordId: Int!
  recordQuota: Int!
  activated: Boolean!
}

type Query {
  me: User
  userByEmail(email: String!): User
  userById(id: String!): User
  usernameExists(username: String!): Boolean
  emailExists(email: String!): Boolean
}

type LoginResponse {
  accessToken: String
  user: User
  success: Boolean
  message: String
}

type RegisterResponse {
  success: Boolean
  message: String
}

enum AddFilterListType {
  WHITELIST
  BLACKLIST
}

type AddFilterResponse {
  success: Boolean
  message: String
}

type DeleteFilterResponse {
  success: Boolean
  message: String
}

type ChangeFilterTypeResponse {
  success: Boolean
  message: String
}

type UpdateProfileResponse {
  success: Boolean
  message: String
}

type RenameProfileResponse {
  success: Boolean
  message: String
}

type StandardResponse {
  success: Boolean
  message: String
}

type VerifyEmailOwnershipResponse {
  success: Boolean
  message: String
  chanceLeft: Int
}

type Mutation {
  login(email: String!, password: String!): LoginResponse
  register(username: String!, email: String!, password: String!, code: String!): RegisterResponse
  addFilter(type: AddFilterListType!, regex: String!): AddFilterResponse
  changeFilterType(type: FilterListType!): ChangeFilterTypeResponse
  addProfile(profile: String!): UpdateProfileResponse
  deleteProfile(profile: String!): UpdateProfileResponse
  deleteFilter(filter: String!, filterListType: FilterListType!): DeleteFilterResponse
  renameProfile(originalProfile: String!, newProfile: String!): RenameProfileResponse
  sendEmailOwnershipVerificationCode(username: String!, email: String!): StandardResponse
  verifyEmailOwnership(username: String!, email: String!, code: String!): VerifyEmailOwnershipResponse
}
